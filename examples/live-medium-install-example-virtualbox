#!/bin/sh

## live-tools(7) - System Support Scripts
## Copyright (C) 2013-2017 Richard Nelson <unixabg@gmail.com>
## Copyright (C) 2013 Daniel Baumann <mail@daniel-baumann.ch>
##
## This program comes with ABSOLUTELY NO WARRANTY; for details see COPYING.
## This is free software, and you are welcome to redistribute it
## under certain conditions; see COPYING for details.


set -e

# Defaults
_VERSION="20170714-1-vBox"

_IMGVERSION="20160729"

_URL="FIXME::files/progress-linux/${_VERSION}/live/"

_TARGET="/dev/sda"

# Dependencies
if [ ! -e /sbin/parted ]
then
	echo "E: /sbin/parted - no such file"
	echo "E: On Debian based systems, parted can be installed with:"
	echo "E:   apt-get install parted"

	exit 1
fi

if [ ! -e /usr/bin/extlinux ]
then
	echo "E: /usr/bin/extlinux - no such file"
	echo "E: On Debian based systems, extlinux can be installed with:"
	echo "E:   apt-get install extlinux"

	exit 1
fi

if [ ! -e /lib/live/mount/medium/isolinux/splash.png ]
then
	echo "E: /lib/live/mount/medium/isolinux/splash.png - no such file"
	echo "I: On Progress-Linux live systems /lib/live/mount/medium/isolinux/splash.png image should be present"

	exit 1
fi

if [ ! -e /usr/lib/syslinux/modules/bios/vesamenu.c32 ]
then
	echo "E: /usr/lib/syslinux/modules/bios/vesamenu.c32 - no such file"
	echo "I: On Debian based systems, vesamenu.c32 can be installed with:"
	echo "I:   apt-get install syslinux-common"

	exit 1
fi

if [ ! -e /boot/memtest86+.bin ]
then
	echo "E: /boot/memtest86+.bin - no such file"
	echo "E: On Debian based systems, memtest86+ can be installed with:"
	echo "E:   apt-get install memtest86+"

	exit 1
fi

# Display warning
cat << EOF
######################################################
WARNING: This will erase all data on the target device
######################################################

Please enter URL to download the ${_IMAGE_FILE} image from
(default: ${_URL})
EOF

# Ask for URL
echo -n ": "
read _READ

_URL="${_READ:-${_URL}}"

# Display partitions
cat << EOF

-------------------------------------------------------------------------------
$(lsblk)
-------------------------------------------------------------------------------

EOF

# Ask for target device
echo -n "Please enter block device to install system to (default: ${_TARGET}): "
read _READ

_TARGET="${_READ:-${_TARGET}}"

if [ ! -b "${_TARGET}" ]
then
	echo "E: ${_TARGET} not a block device, aborting."
	exit 1
fi

cat << EOF

#########################################################
WARNING: This will erase all data on the ${_TARGET} device
#########################################################

You are about to do something potentially harmful.
To continue type in the phrase 'Yes, do as I say!'
EOF

echo -n ": "
read _CONTINUE

case "${_CONTINUE}" in
	'Yes, do as I say!')

		;;

	*)
		echo "Abort."

		exit 1
		;;
esac

# Zero fill just a bit
echo "Starting dd command for short zero fill..."
dd if=/dev/zero of=${_TARGET} bs=1024 count=1024

# Make a partitions
echo "Starting parted command to make lablel and partition..."

# Primary Firmware partition
parted -s -a optimal ${_TARGET} mklabel msdos -- mkpart primary ext4 1 10000
# Swap partition
parted -s -a optimal ${_TARGET} -- mkpart primary ext4 10000 15000
# Virtualbox partition
parted -s -a optimal ${_TARGET} -- mkpart primary ext4 15000 -1

# Set the block device to boot.
echo "Starting parted command to enable boot..."
parted -s ${_TARGET} --  set 1 boot on
parted -s ${_TARGET} -- print

#READ _PAUSE

# Make new filesystem on the new partitions.
echo "Making filesystem..."
mkfs.ext4 -O ^64bit -L Firmware ${_TARGET}1
mkfs.ext4 -O ^64bit -L persistence ${_TARGET}2
mkfs.ext4 -O ^64bit -L virtualbox ${_TARGET}3

# Mount the persistence drive to configure
echo "Mounting the persistence drive to configure saving user settings and files..."
mkdir /persistence
mount ${_TARGET}2 /persistence

echo "Creating the persistence.conf file..."
echo "/home union" > /persistence/persistence.conf
echo "Making gnome config settings on persistence drive..."
mkdir -p /persistence/home/rw/user/.config
rsync -av --progress FIXME::files/gnome-settings/ /persistence/home/rw/user/
chown -R user: /persistence/home/rw/user

echo "Unmount the persistence device..."
umount -l /persistence

# Mount the target filesystem
echo "Mounting file system to allow saving of webboot files..."
mount ${_TARGET}1 /mnt

# Create the directory to save webboot files
echo "Creating /live dir..."
mkdir -p /mnt/live

# Download the webboot files from server
echo "Downloading webboot files..."

# Rsync the files to the target machine.
rsync -av --progress ${_URL} /mnt/live/



# Renaming files
#mv /mnt/live/debian-live-*.vmlinuz /mnt/live/vmlinuz
#mv /mnt/live/debian-live-*.initrd.img /mnt/live/initrd.img
#mv /mnt/live/debian-live-*.squashfs /mnt/live/filesystem.squashfs

# Writing mbr
dd if=/usr/lib/syslinux/mbr/mbr.bin of="${_TARGET}" bs=440 count=1 conv=notrunc

# Configuring bootloader
mkdir -p /mnt/boot/extlinux

cp /usr/lib/syslinux/modules/bios/ldlinux.c32 /mnt/boot/extlinux/
cp /usr/lib/syslinux/modules/bios/libcom32.c32 /mnt/boot/extlinux/
cp /usr/lib/syslinux/modules/bios/libutil.c32 /mnt/boot/extlinux/
cp /usr/lib/syslinux/modules/bios/vesamenu.c32 /mnt/boot/extlinux/
cp /lib/live/mount/medium/isolinux/splash.png /mnt/boot/extlinux/splash.png
cp /boot/memtest86+.bin /mnt/boot/

cat > /mnt/boot/extlinux/extlinux.conf << EOF
default hybrid
prompt 0
timeout 50

default vesamenu.c32
menu background splash.png
menu color title	* #FFFFFFFF *
menu color border	* #00000000 #00000000 none
menu color sel		* #ffffffff #76a1d0ff *
menu color hotsel	1;7;37;40 #ffffffff #76a1d0ff *
menu color tabmsg	* #ffffffff #00000000 *
menu color help		37;40 #ffdddd00 #00000000 none
menu vshift 16
menu rows 10
menu helpmsgrow 15
# The command line must be at least one line from the bottom.
menu cmdlinerow 16
menu timeoutrow 16
menu tabmsgrow 18
menu tabmsg Press ENTER to boot or TAB to edit a menu entry


label hybrid
	menu label Win7HP Hybrid Firmware ${_IMGVERSION}
	menu default
	linux /live/vmlinuz
	initrd /live/initrd.img
	append boot=live components vga=normal video=vesa persistence user-default-groups=vboxusers quiet noprompt splash ipv6.disable=1 loop.max_loop=32 virtualbox=none:/virtualbox:Win7HP

label live
	menu label Live
	linux /live/vmlinuz
	initrd /live/initrd.img
	append boot=live components vga=normal video=vesa loop.max_loop=32 quiet splash

label live-failsafe
	menu label Live (failsafe)
	linux /live/vmlinuz
	initrd /live/initrd.img
	append boot=live components memtest noapic noapm nodma nomce nolapic nomodeset nosmp nosplash loop.max_loop=32 vga=normal ipv6.disable=1

label memtest
	menu label Memory Diagnostic Tool (memtest86+)
	linux /boot/memtest86+.bin
EOF

# Writing bootloader
extlinux --install /mnt/boot/extlinux

# Sync and umount
echo "Cleanup of firmware layer with sync and umount..."
umount /mnt
sync


#########################################################
# VirtualBox machine injection

# Mount the target filesystem
echo "Mounting the VirtualBox partition..."
mount ${_TARGET}3 /mnt

# FIXME Add choices of images.
# Rsync the files to the target machine.
rsync -av --progress FIXME::vbox/${_IMGVERSION}/Win7HP /mnt/
# Thi is the settings for user home
rsync -av --progress FIXME::vbox/${_IMGVERSION}/.VirtualBox /mnt/

# Sync and umount
echo "Cleanup of persistence work with umount and sync..."
sync
umount /mnt

echo "Please halt your machine and boot up to your live firmware."
